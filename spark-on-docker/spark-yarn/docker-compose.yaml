version: '3.7'

networks: 
  spark:

services: 

  spark:
    image: spark-yarn:3.2.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark
    networks:
      - spark
    hostname: localhost
    ports:
      - 8080:18080 # Spark History Server
      - 4040:4040 # Spark UI
      - 8088:8088 # Resource Manager UI
      - 8042:8042 # Node
      - 9864:9864 # Datanode port
      - 9870:9870 # HDFS UI
      - 8998:8998 # Livy UI
      - 8888:8888 # Jupyter Notebook
    volumes:
      - ./apps:/opt/apps # put your apps here and run spark-submit.sh (edit it)
      - ./hadoop-conf/core-site.xml:/opt/hadoop-3.3.1/etc/hadoop/core-site.xml
      - ./hadoop-conf/hdfs-site.xml:/opt/hadoop-3.3.1/etc/hadoop/hdfs-site.xml
      - ./hadoop-conf/mapred-site.xml:/opt/hadoop-3.3.1/etc/hadoop/mapred-site.xml
      - ./hadoop-conf/yarn-site.xml:/opt/hadoop-3.3.1/etc/hadoop/yarn-site.xml
      - ./spark-conf/spark-defaults.conf:/opt/spark-3.2.1-bin-without-hadoop/conf/spark-defaults.conf
      - ./livy-conf/livy.conf:/opt/apache-livy/conf/livy.conf
    command:
      - "-c"
      - |
        echo "Starting ssh service..."
        service ssh start
        ssh-keyscan -H localhost >> ~/.ssh/known_hosts

        echo "Formating the filesystem..."
        hdfs namenode -format

        echo "Starting NameNode, DataNode, Resource Manager and Node Manager..."
        hdfs --daemon start namenode
        hdfs --daemon start datanode
        yarn --daemon start resourcemanager
        yarn --daemon start nodemanager
        yarn --daemon start proxyserver

        echo "Creating the HDFS directories required to execute MapReduce jobs..."
        hdfs dfs -mkdir /user
        hdfs dfs -mkdir /user/$$(whoami)
        hdfs dfs -mkdir /spark-logs
        # hdfs dfs -chmod -R 777 /spark-logs

        echo "Starting spark..."
        export SPARK_DIST_CLASSPATH=$$(hadoop classpath)
        /opt/spark-$${SPARK_VERSION}-bin-without-hadoop/sbin/start-all.sh
        /opt/spark-$${SPARK_VERSION}-bin-without-hadoop/sbin/start-history-server.sh

        # echo "Starting livy..."
        /opt/apache-livy/bin/livy-server start

        echo "Starting jupyter lab..."
        jupyter lab --allow-root --no-browser --NotebookApp.token=''

        tail -f /opt/hadoop-$${HADOOP_VERSION}/logs/*log

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    networks:
      - spark
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g # Xms initial size of total heap space, Xmx maximum size of total heap space
    volumes:
      - ./elastic-data:/user/share/elasticsearch/data
    user: "1000:0"
    ports: 
      - 9200:9200

  kibana:
    image: kibana:7.14.2
    container_name: kibana
    networks:
      - spark
    user: "1000:0"
    ports: 
      - 5601:5601

  mysql:
    image: mysql:8.0.27
    container_name: mysql
    networks:
      - spark
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/samples:/docker-entrypoint-initdb.d
    command: --explicit_defaults_for_timestamp

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - spark
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka-broker
    container_name: kafka-broker
    networks:
      - spark
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    depends_on:
      - zookeeper

  graphite:
    image: graphiteapp/graphite-statsd:1.1.8-2
    container_name: graphite
    networks:
      - spark
    ports: 
      - 80:80 # graphite webui
      - 8125:8125 # statsd
      - 8126:8126 # statsd admin
